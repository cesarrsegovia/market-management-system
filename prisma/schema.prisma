// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//definir roles
enum Role {
  ADMIN
  CASHIER
}

//definir modelo tabla de usuarios
model User {
  id Int @id @default(autoincrement())
  email     String   @unique
  password  String
  name      String?
  role      Role     @default(CASHIER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  sales     Sale[] // Un usuario puede tener muchas ventas
}

model Category {
  id Int @id @default(autoincrement())
  name      String    @unique
  products  Product[]
}

model Product {
  id Int @id @default(autoincrement())
  name        String
  description String?
  price       Float
  sku         String   @unique @default(cuid()) // Stock Keeping Unit
  categoryId  Int
  category    Category @relation(fields: [categoryId], references: [id])
  inventory   Inventory?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  saleItems SaleItem[] // Un producto puede estar en muchas líneas de venta
}

model Inventory {
  id        Int      @id @default(autoincrement())
  quantity  Int      @default(0) // Cantidad en stock
  productId Int      @unique // 1. Clave foránea única
  product   Product  @relation(fields: [productId], references: [id])
}
model Sale {
  id        Int        @id @default(autoincrement())
  total     Float
  createdAt DateTime   @default(now())
  
  // Relación: Qué usuario hizo la venta
  userId    Int
  user      User       @relation(fields: [userId], references: [id])
  
  // Relación: Qué items se vendieron en esta venta
  items     SaleItem[]
}
model SaleItem {
  id        Int   @id @default(autoincrement())
  quantity  Int
  price     Float // Precio del producto en el momento de la venta
  
  // Relación: A qué recibo pertenece este item
  saleId    Int
  sale      Sale  @relation(fields: [saleId], references: [id])
  
  // Relación: Qué producto se vendió
  productId Int
  product   Product @relation(fields: [productId], references: [id])
}